// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: group.proto

package server

import (
	"context"

	"chatLion/rpc/group/group"
	"chatLion/rpc/group/internal/logic"
	"chatLion/rpc/group/internal/svc"
)

type GroupServer struct {
	svcCtx *svc.ServiceContext
	group.UnimplementedGroupServer
}

func NewGroupServer(svcCtx *svc.ServiceContext) *GroupServer {
	return &GroupServer{
		svcCtx: svcCtx,
	}
}

func (s *GroupServer) GetMembersByGroupID(ctx context.Context, in *group.GetMembersRequest) (*group.GetMembersResponse, error) {
	l := logic.NewGetMembersByGroupIDLogic(ctx, s.svcCtx)
	return l.GetMembersByGroupID(in)
}

func (s *GroupServer) CreateGroup(ctx context.Context, in *group.CreateGroupRequest) (*group.CreateGroupResponse, error) {
	l := logic.NewCreateGroupLogic(ctx, s.svcCtx)
	return l.CreateGroup(in)
}

func (s *GroupServer) JoinGroup(ctx context.Context, in *group.JoinGroupRequest) (*group.JoinGroupResponse, error) {
	l := logic.NewJoinGroupLogic(ctx, s.svcCtx)
	return l.JoinGroup(in)
}

func (s *GroupServer) DeleteGroup(ctx context.Context, in *group.DeleteGroupRequest) (*group.DeleteGroupResponse, error) {
	l := logic.NewDeleteGroupLogic(ctx, s.svcCtx)
	return l.DeleteGroup(in)
}
