// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.3
// Source: user.proto

package userclient

import (
	"context"

	"chatLion/rpc/user/user"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	ModifyUserRequest       = user.ModifyUserRequest
	ModifyUserResponse      = user.ModifyUserResponse
	MoifyUserAvatorRequest  = user.MoifyUserAvatorRequest
	MoifyUserAvatorResponse = user.MoifyUserAvatorResponse

	User interface {
		ModifyUser(ctx context.Context, in *ModifyUserRequest, opts ...grpc.CallOption) (*ModifyUserResponse, error)
		ModifyUserAvator(ctx context.Context, in *MoifyUserAvatorRequest, opts ...grpc.CallOption) (*MoifyUserAvatorResponse, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

func (m *defaultUser) ModifyUser(ctx context.Context, in *ModifyUserRequest, opts ...grpc.CallOption) (*ModifyUserResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.ModifyUser(ctx, in, opts...)
}

func (m *defaultUser) ModifyUserAvator(ctx context.Context, in *MoifyUserAvatorRequest, opts ...grpc.CallOption) (*MoifyUserAvatorResponse, error) {
	client := user.NewUserClient(m.cli.Conn())
	return client.ModifyUserAvator(ctx, in, opts...)
}
